import type { MyContext } from "../../shared/types.js";
import { Markup } from "telegraf";
import {
  getGlobalStoryStats,
  getTopStories,
  getRecentTrend,
} from "../../features/stats/adminStats.service.js";

function fmtMs(ms?: number) {
  if (!ms || ms <= 0) return "-";
  const s = Math.round(ms / 1000);
  const m = Math.floor(s / 60);
  const sec = s % 60;
  return m > 0 ? `${m} –º–∏–Ω ${sec} —Å–µ–∫` : `${sec} —Å–µ–∫`;
}
function pct(n: number) {
  if (!isFinite(n)) return "0%";
  return `${(Math.round(n * 10) / 10).toFixed(1)}%`;
}
function cut(s?: string, n = 42) {
  if (!s) return "";
  return s.length > n ? s.slice(0, n - 1) + "‚Ä¶" : s;
}
function html(s = "") {
  return s.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}

export async function renderAdminStatsScreen(ctx: MyContext) {
  const [global, top, trend] = await Promise.all([
    getGlobalStoryStats(),
    getTopStories(5),
    getRecentTrend(7),
  ]);

  const topTxt = top.length
    ? top
        .map(
          (t, i) =>
            `${i + 1}. ${html(cut(t.title))}\n` +
            `   –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: <b>${t.views}</b>, –Ω–∞—á–∞—Ç–æ: <b>${
              t.started
            }</b> (${pct(t.conversionStartedPct)} –æ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤),\n` +
            `   –∑–∞–≤–µ—Ä—à–µ–Ω–æ: <b>${t.completed}</b> (${pct(
              t.conversionCompletedPct
            )} –æ—Ç –Ω–∞—á–∞—Ç—ã—Ö), –±—Ä–æ—à–µ–Ω–æ: <b>${
              t.drop
            }</b>, —Å—Ä–µ–¥–Ω–µ–µ —á—Ç–µ–Ω–∏–µ: <b>${fmtMs(t.avgReadTimeMs)}</b>`
        )
        .join("\n")
    : "‚Äî";

  const trendTxt = trend
    .map(
      (b) =>
        `${b.date}: –Ω–∞—á–∞—Ç–æ <b>${b.started}</b>, –∑–∞–≤–µ—Ä—à–µ–Ω–æ <b>${b.completed}</b>, –±—Ä–æ—à–µ–Ω–æ <b>${b.drops}</b>`
    )
    .join("\n");

  const text = `üßë‚Äçüíª <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–∞–¥–º–∏–Ω)</b>

<b>–ì–ª–æ–±–∞–ª—å–Ω–æ</b>
–ò—Å—Ç–æ—Ä–∏–π –≤—Å–µ–≥–æ: <b>${global.storiesTotal}</b> (–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: <b>${
    global.publishedStories
  }</b>)
–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: <b>${global.totalViews}</b>
–ù–∞—á–∞—Ç–æ: <b>${global.totalStarted}</b> ‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: <b>${
    global.totalCompleted
  }</b> ‚Ä¢ –ë—Ä–æ—à–µ–Ω–æ: <b>${global.totalDrops}</b>
–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —á—Ç–µ–Ω–∏—è: <b>${fmtMs(global.avgReadTimeMs)}</b>
–ê–º–æ—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: <b>${global.uniqueReadersApprox}</b>

<b>–¢–æ–ø –∏—Å—Ç–æ—Ä–∏–π</b>
${topTxt}

<b>–¢—Ä–µ–Ω–¥ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π)</b>
${trendTxt}`;

  return {
    text,
    inline: Markup.inlineKeyboard([
      [Markup.button.callback("‚Ü©Ô∏é –í –∞–¥–º–∏–Ω-–º–µ–Ω—é", "admin")],
      [Markup.button.callback("üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é", "main")],
    ]),
    parseMode: "HTML" as const,
  };
}
