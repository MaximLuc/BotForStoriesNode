import type { MyContext } from "../../shared/types.js"
import { Markup } from "telegraf"
import { getDraft, setDraftType, setDraftTtl, setDraftText, startDraft, setDraftAudience } from "../../features/broadcast/broadcast.state.js"

function html(s=""){return s.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}

export function renderBroadcastPreview(ctx: MyContext) {
  const u = ctx.state.user!
  const d = getDraft(u.tgId)
  const text = d?.text ?? "(—Ç–µ–∫—Å—Ç –Ω–µ –∑–∞–¥–∞–Ω)"

  const typeRow = [
    Markup.button.callback(d?.type === "bulk" ? "‚úÖ –†–∞—Å—Å—ã–ª–∫–∞":"–†–∞—Å—Å—ã–ª–∫–∞", "broadcast:type:bulk"),
    Markup.button.callback(d?.type === "ad"   ? "‚úÖ –†–µ–∫–ª–∞–º–∞":"–†–µ–∫–ª–∞–º–∞",   "broadcast:type:ad"),
  ]
  const audRow = [
    Markup.button.callback(d?.audience === "all"      ? "‚úÖ –í—Å–µ–º"     :"–í—Å–µ–º",     "broadcast:aud:all"),
    Markup.button.callback(d?.audience === "premium"  ? "‚úÖ –ü—Ä–µ–º–∏—É–º"  :"–ü—Ä–µ–º–∏—É–º",  "broadcast:aud:premium"),
    Markup.button.callback(d?.audience === "active30" ? "‚úÖ –ê–∫—Ç–∏–≤ 30" :"–ê–∫—Ç–∏–≤ 30", "broadcast:aud:active30"),
  ]
  const ttlRow = (d?.type==="bulk")
    ? [
        Markup.button.callback(d?.ttlSec===5*60   ? "‚úÖ 5 –º–∏–Ω":"5 –º–∏–Ω",   "broadcast:ttl:300"),
        Markup.button.callback(d?.ttlSec===20*60  ? "‚úÖ 20 –º–∏–Ω":"20 –º–∏–Ω", "broadcast:ttl:1200"),
        Markup.button.callback(d?.ttlSec===60*60  ? "‚úÖ 1 —á–∞—Å":"1 —á–∞—Å",   "broadcast:ttl:3600"),
      ]
    : [
        Markup.button.callback(d?.ttlSec===6*60*60    ? "‚úÖ 6 —á–∞—Å–æ–≤":"6 —á–∞—Å–æ–≤", "broadcast:ttl:21600"),
        Markup.button.callback(d?.ttlSec===24*60*60   ? "‚úÖ 24 —á–∞—Å–∞":"24 —á–∞—Å–∞", "broadcast:ttl:86400"),
        Markup.button.callback(d?.ttlSec===3*24*60*60 ? "‚úÖ 3 –¥–Ω—è":"3 –¥–Ω—è",     "broadcast:ttl:259200"),
      ]
  const posHint = d?.type==="ad"
    ? "–†–µ–∫–ª–∞–º–∞ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞ <b>–Ω–∞–¥</b> –º–µ–Ω—é (–º–µ–Ω—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞–¥–∏–º)."
    : "–°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç <b>–ø–æ–¥</b> —Ç–µ–∫—É—â–∏–º –º–µ–Ω—é."

  return {
    text:
`<b>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</b>

${html(text)}

–¢–∏–ø: <b>${d?.type==="ad"?"–†–µ–∫–ª–∞–º–∞":"–†–∞—Å—Å—ã–ª–∫–∞"}</b>
–ê—É–¥–∏—Ç–æ—Ä–∏—è: <b>${d?.audience==="all"?"–≤—Å–µ–º":d?.audience==="premium"?"–ø—Ä–µ–º–∏—É–º":"–∞–∫—Ç–∏–≤ 30 –¥–Ω–µ–π"}</b>
TTL: <b>${Math.round((d?.ttlSec ?? 0)/60)} –º–∏–Ω</b> (${posHint})`,
    inline: Markup.inlineKeyboard([
      typeRow,
      audRow,
      ttlRow,
      [Markup.button.callback("üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", "broadcast:send")],
      [Markup.button.callback("‚úñÔ∏è –û—Ç–º–µ–Ω–∞", "broadcast:cancel")],
      [Markup.button.callback("‚Ü©Ô∏é –í –∞–¥–º–∏–Ω-–º–µ–Ω—é", "admin")],
    ]),
    parseMode: "HTML" as const,
  }
}

export function onDraftText(ctx: MyContext) {
  const u = ctx.state.user!
  setDraftText(u.tgId, (ctx.message as any).text)
  const chatId = ctx.chat?.id, msgId = (ctx.message as any)?.message_id
  if (chatId && msgId) { ctx.telegram.deleteMessage(chatId, msgId).catch(()=>{}) }
  return renderBroadcastPreview(ctx)
}

export function changeDraft(ctx: MyContext, kind: "type"|"aud"|"ttl", value: string) {
  const u = ctx.state.user!
  if (kind==="type") setDraftType(u.tgId, value as any)
  else if (kind==="aud") setDraftAudience(u.tgId, value as any)
  else setDraftTtl(u.tgId, Number(value))
  return renderBroadcastPreview(ctx)
}

export function startBroadcastDraft(ctx: MyContext) {
  const u = ctx.state.user!
  startDraft(u.tgId)
  return {
    text: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å –∏–ª–∏ —Ç–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º—ã –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º:",
    inline: Markup.inlineKeyboard([[Markup.button.callback("‚Ü©Ô∏é –í –∞–¥–º–∏–Ω-–º–µ–Ω—é","admin")]]),
    parseMode: "HTML" as const,
  }
}
